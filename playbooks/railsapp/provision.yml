---
- hosts: app
  become: yes

  vars_files:
    - vars.yml

  handlers:
  - name: restart postgresql
    service:
      name: postgresql
      state: restarted
    delegate_to: "{{ groups['db'][0] }}"

  roles:
    - role: geerlingguy.git
    - role: geerlingguy.nodejs
    - { role: rvm.ruby,
        tags: ruby,
        become: yes,
        rvm1_rubies: ["{{ my_ruby_version }}"],
        rvm1_install_flags: '--auto-dotfiles',  # Remove --user-install from defaults
        rvm1_install_path: /usr/local/rvm,      # Set to system location
        rvm1_user: root                         # Need root account to access system location
      }

  tasks:
    - name: Add or update deploy user (user owning/running app files/processes)
      user:
        name: "{{ app_user }}"
        shell: /bin/bash
        home: /home/{{ app_user }}

    - name: Set authorized key from file (for deploy user)
      authorized_key:
        user: "{{ app_user }}"
        state: present
        key: "{{ lookup('file', '/Users/antonio/.ssh/id_rsa.pub') }}" #  Mac
  #      key: "{{ lookup('file', '/home/antonio/.ssh/id_rsa.pub') }}" #  Ubuntu

    - name: Ensure present nginx upstream-loadbalancer config-file for railsapp-puma 
      template:
        src: templates/{{ app_name }}.conf.j2
        dest: /etc/nginx/conf.d/{{ app_name }}.conf
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: 0664
      when: inventory_hostname == groups.app[0] # ONLY ONCE PER APP GROUP
      delegate_to: "{{ groups['web'][0] }}"

    # SPECIFIC RAILSAPP DATABASE PROVISIONING TASKS
    # (PER DATABASE TYPE)
    - import_tasks: db_postgres_tasks.yml
      when: db_type == 'postgres'

    - import_tasks: db_mysql_tasks.yml
      when: db_type == 'mysql'

    - import_tasks: db_sqlite_tasks.yml
      when: db_type == 'sqlite'      
