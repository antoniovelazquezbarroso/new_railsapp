---
- hosts: app
  become: yes

  vars_files:
    - vars.yml

  handlers:
  - name: restart postgresql
    service:
      name: postgresql
      state: restarted
    delegate_to: "{{ groups['db'][0] }}"

  roles:
    - role: geerlingguy.git
    - role: geerlingguy.nodejs
    - { role: rvm.ruby,
        tags: ruby,
        become: yes,
        rvm1_rubies: ["{{ my_ruby_version }}"],
        rvm1_install_flags: '--auto-dotfiles',     # Remove --user-install from defaults
        rvm1_install_path: /usr/local/rvm,         # Set to system location
        rvm1_user: root                            # Need root account to access system location
      }

  tasks:
    - name: Install app dependencies for postgresql.
      apt: "name={{ item }} state=present"
      with_items:
        - libpq-dev

    - name: Add or update deploy user
      user:
        name: "{{ app_user }}"
        shell: /bin/bash
        home: /home/{{ app_user }}

    - name: Set authorized key from file (for deploy user)
      authorized_key:
        user: "{{ app_user }}"
        state: present
        key: "{{ lookup('file', '/Users/antonio/.ssh/id_rsa.pub') }}" #  Mac
  #      key: "{{ lookup('file', '/home/antonio/.ssh/id_rsa.pub') }}" #  Ubuntu

    - name: Ensure app directory exists and is writeable.
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: 0755

    - name: Create postgres user for my app
      postgresql_user:
        name: "{{ app_user }}"
        password: "{{ app_user }}"
  #      role_attr_flags: CREATEDB,NOSUPERUSER
        state: present
      become: yes
      become_user: postgres
      # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
      # Avoid problems becoming postgres user
      vars:
        ansible_ssh_pipelining: true
      when: inventory_hostname == groups.app[0] # ONLY ONCE PER APP GROUP
      delegate_to: "{{ groups['db'][0] }}"

    - name: Setup app production database if not already exists
      postgresql_db:
        name: "{{ app_name }}_production"
        owner: "{{ app_user }}"
        state: present
      become: yes
      become_user: postgres
      # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
      # Avoid problems becoming postgres user
      vars:
        ansible_ssh_pipelining: true
      when: inventory_hostname == groups.app[0] # ONLY ONCE PER GROUP
      delegate_to: "{{ groups['db'][0] }}"

  # FOR EACH OF THE app SERVERS
    - name: Setup postgres hba entry (for postgres user and app production database)
      lineinfile:
        path: "/etc/postgresql/9.5/main/pg_hba.conf"
        regexp: "^#?host {{ app_name }}_production {{ app_user }} {{ inventory_hostname }}/32 password"
        line: "host {{ app_name }}_production {{ app_user }} {{ inventory_hostname }}/32 password"
        state: present
      become: yes
      become_user: postgres
      # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
      # Avoid problems becoming postgres user
      vars:
        ansible_ssh_pipelining: true
      delegate_to: "{{ groups['db'][0] }}"
      notify: restart postgresql
