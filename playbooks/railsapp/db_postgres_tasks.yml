---
# THESE TASKS ARE IMPORTED IN THE deploy.yml 
# when: db_type == 'postgres'
# THEY SET POTSGRESQL REQUIRED LIBRARIES AND CONFIGURATION
- name: Install app dependencies for postgresql.
  apt:
    name : ['libpq-dev','python-psycopg2']
    state: present

- name: Create postgres user for the app
  postgresql_user:
    name: "{{ db_username }}"
    password: "{{ db_password }}"
    #role_attr_flags: CREATEDB,NOSUPERUSER
    state: present
  become: yes
  become_user: postgres
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  # Avoid problems becoming postgres user
  vars:
    ansible_ssh_pipelining: true
  when: inventory_hostname == groups.app[0] # ONLY ONCE PER APP GROUP
  delegate_to: "{{ groups['db'][0] }}"

- name: Setup app production database if not already exists
  postgresql_db:
    name: "{{ db_database_name }}"
    owner: "{{ db_username }}"
    state: present
  become: yes
  become_user: postgres
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  # Avoid problems becoming postgres user
  vars:
    ansible_ssh_pipelining: true
  when: inventory_hostname == groups.app[0] # ONLY ONCE PER GROUP
  delegate_to: "{{ groups['db'][0] }}"

# FOR EACH OF THE app SERVERS
- name: Setup postgres hba entry (for postgres user and app production database)
  lineinfile:
    path: "/etc/postgresql/9.5/main/pg_hba.conf"
    regexp: "^#?host {{ db_database_name }} {{ db_username }} {{ inventory_hostname }}/32 password"
    line: "host {{ db_database_name }} {{ db_username }} {{ inventory_hostname }}/32 password"
    state: present
  become: yes
  become_user: postgres
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  # Avoid problems becoming postgres user
  vars:
    ansible_ssh_pipelining: true
  delegate_to: "{{ groups['db'][0] }}"
  notify: restart postgresql
