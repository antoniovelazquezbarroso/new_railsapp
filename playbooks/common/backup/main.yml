---
- hosts: all
  become: yes
  vars_files:
    - vars.yml

  tasks:
#  Configure backup user account with folder and SSH config and authentication keys 
#  that allow him to deliver backups via SSH to the Remote Backup Server (Qnap)
    - name: Add or update backup user
      user:
        name: "{{ backup_user }}"
        shell: /bin/bash
        home: /home/{{ backup_user }}

#  This task is not necessary. Why would you want to access as backup_user ?
#  Was useful while testing
#    - name: Set authorized key from file (for backup user)
#      authorized_key:
#        user: "{{ backup_user }}"
#        state: present
#        key: "{{ lookup('file', '/Users/antonio/.ssh/id_rsa.pub') }}" #  Mac
#  #      key: "{{ lookup('file', '/home/antonio/.ssh/id_rsa.pub') }}" #  Ubuntu

    - name: Add .ssh folder to /home/backup
      file:
        path: /home/{{ backup_user }}/.ssh
        state: directory
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
        mode: 0700

    # SETTING Host 192.168.1.10   IdentityFile ~/.ssh/backup
    - name: Copy ssh client config file (for backup user)
      copy:
        src: ssh_config
        dest: /home/{{ backup_user }}/.ssh/config
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
        mode: 0644

    - name: Copy backup key-private-file (for backup user)
      copy:
        src: ssh_key_backup
        dest: /home/{{ backup_user }}/.ssh/backup
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
        mode: 0600

    - name: Copy backup key-public-file (for backup user)
      copy:
        src: ssh_key_backup.pub
        dest: /home/{{ backup_user }}/.ssh/backup.pub
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
        mode: 0644

#     NO ME GUSTA LA SIGUIENTE SOLUCIÓN (¿NO SOBREESCRIBE EL GRUPO DEL FILE O FOLDER?)
#     ¿COMO DARLE DERECHOS DE LECTURA SOBRE syslog (¿Hacerle del grupo adm?)?
#    - name: Ensure backup user permissions over the folders to be backed up
#      file:
#        path: "{{ item }}"
#        state: directory
#        group: "{{ backup_user }}"
#        mode: 0775
#      with_items: backup_directories

    - name: Ensure backup folder exists.
      file:
        path: "{{ backup_path }}"
        state: directory
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
        mode: 0775
    
    - name: Copy backup script to server.
      template:
        src: backup.sh.j2
        dest: "{{ backup_path }}/backup.sh"
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
        mode: 0744
    
    - name: Copy excludes file to server.
      template:
        src: backup-exclude.txt.j2
        dest: "{{ backup_path }}/backup-exclude.txt"
        owner: "{{ backup_user }}"
        group: "{{ backup_user }}"
        mode: 0644
    
    - name: Configure backup cron job.
      cron:
        name: "Backup cron job"
        minute: "{{ backup_minute }}"
        hour: "{{ backup_hour }}"
        user: "{{ backup_user }}"
        job: "{{ backup_path }}/backup.sh"
        state: "{{ backup_cron_job_state }}"
