---
# SEE https://github.com/samdoran/ansible-role-pgsql-replication
# FIRST SET OF TASKS TO RUN ON MASTER, SECOND SET OF TASKS TO RUN ON REPLICA
#
# MASTER
# The following tasks run only when setting MASTER
# (when: pgsqlrep_master_address is defined and
#  inventory_hostname == pgsqlrep_master_address)
# pgsqlrep_master_address needs to be set in vars.yml file
# if you want replication
- name: Configure master server
  lineinfile:
    state: present
    backrefs: true
    dest: "{{ pgsqlrep_config_path }}/postgresql.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ pgsqlrep_postgres_conf_lines }}"
  when: pgsqlrep_master_address is defined and inventory_hostname == pgsqlrep_master_address
  notify: restart postgresql

- name: Create replication user account
  postgresql_user:
    name: "{{ pgsqlrep_user }}"
    password: "{{ pgsqlrep_password }}"
    role_attr_flags: replication
  become: true
  become_user: postgres
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  # Avoid problems becoming postgres user
  vars:
    ansible_ssh_pipelining: true
  when: pgsqlrep_master_address is defined and inventory_hostname == pgsqlrep_master_address
  notify: restart postgresql

- name: Add trust in pg_hba.conf
  lineinfile:
    state: present
    dest: "{{ pgsqlrep_config_path }}/pg_hba.conf"
    regexp: 'host.*replication.*{{ item }}/32.*trust'
    line: 'host    replication    {{ pgsqlrep_user }}  {{ item }}/32 trust'
  become: yes
  become_user: postgres
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  # Avoid problems becoming postgres user
  vars:
      ansible_ssh_pipelining: true
  with_items: "{{ pgsqlrep_replica_address }}"
  when: pgsqlrep_master_address is defined and inventory_hostname == pgsqlrep_master_address
  notify: restart postgresql
# END OF MASTER
#
# REPLICA
# The following tasks run only when setting REPLICA 
# (when: pgsqlrep_replica_address is defined and
# inventory_hostname == pgsqlrep_replica_address)
# pgsqlrep_replica_address needs to be set in vars.yml file
# if you want replication
- name: Stop PostgreSQL
  service:
    name: postgresql
    state: stopped
  when: pgsqlrep_replica_address is defined and inventory_hostname == pgsqlrep_replica_address
  
- name: Clear out data directory
  shell: rm -rf {{ pgsqlrep_data_path }}/* warn=False
  when: pgsqlrep_replica_address is defined and inventory_hostname == pgsqlrep_replica_address

- name: Create base backup
  command: pg_basebackup -X stream -D {{ pgsqlrep_data_path }} -h {{ groups['db'][0] }} -U {{ pgsqlrep_user }}
  become: true
  become_user: postgres
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  # Avoid problems becoming postgres user
  vars:
    ansible_ssh_pipelining: true
  when: pgsqlrep_replica_address is defined and inventory_hostname == pgsqlrep_replica_address

- name: Create recovery.conf
  template:
    src: recovery.conf.j2
    dest: "{{ pgsqlrep_data_path }}/recovery.conf"
    owner: postgres
    group: postgres
    mode: '0644'
  when: pgsqlrep_replica_address is defined and inventory_hostname == pgsqlrep_replica_address

- name: Enable hot standby
  lineinfile:
    state: present
    backup: true
    dest: "{{ pgsqlrep_config_path }}/postgresql.conf"
    regexp: '^#?hot_standby = \w+(\s+#.*)'
    line: 'hot_standby = yes\1'
    backrefs: true
  become: true
  become_user: postgres
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  # Avoid problems becoming postgres user
  vars:
    ansible_ssh_pipelining: true
  when: pgsqlrep_replica_address is defined and inventory_hostname == pgsqlrep_replica_address

- name: Start and enable PostgreSQL
  service:
    name: postgresql
    state: started
    enabled: true
  when: pgsqlrep_replica_address is defined and inventory_hostname == pgsqlrep_replica_address
# END OF REPLICA
