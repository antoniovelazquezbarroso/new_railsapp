---
- hosts: db, replica
  become: true  # you need sudo

  vars_files:   # only used for replication
    - vars.yml

  handlers:
  - name: restart postgresql
    service:
      name: postgresql
      state: restarted

  tasks:
  - name: package update (apt)
    apt: update_cache=yes cache_valid_time=3600

  - name: Install app dependencies for postgresql 
    apt:
      name: ['postgresql','postgresql-client','libpq-dev','python-psycopg2']
      state: present
    
  - name: Set Postgresql config listening to all addresses 
    lineinfile:
      path: "/etc/postgresql/9.5/main/postgresql.conf"
      regexp: "^#?listen_addresses = 'localhost'"
      backrefs: yes
      line: "listen_addresses = '*'"
    notify: restart postgresql
  
  # TO SET REPLICATION
  # This will run only when:
  #  1.- pgsqlrep_master_address and pgsqlrep_replica_address are set (see vars.yml)
  #  2.- replication has not been set before (recovery.conf not exists)
  - name: Check if replication has already been set
    stat: 
      path: "{{ pgsqlrep_data_path }}/recovery.conf"
    register: recovery_conf
    delegate_to: "{{ groups['replica'][0] }}"

  - import_tasks: replica.yml
    when: recovery_conf.stat.exists == False
  # If you want to "reset replication" (delete the old replica and build a new one)
  # you should first delete the {{ pgsqlrep_data_path }}/recovery.conf file at replica
  # and then run the playbooks/postgres/main.yml playbook
    
